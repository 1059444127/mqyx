package com.psc.pt.dao.user;

import com.psc.pt.model.user.UserInfo;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;
@Component("UserInfoMapper")
public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     * @param id  Primary key for table user_info
     * @return deleteByPrimaryKey
     *
     * @mbggenerated
     */
    @Delete({
        "delete from user_info",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     * @param record  Model for table user_info
     * @return   The last insert key for table user_info
     *
     * @mbggenerated
     */
    @Insert({
        "insert into user_info (user_check_id, real_name, ",
        "sex, photo_path, ",
        "phone, email, hospital_id, ",
        "hospital_name, section_id, ",
        "section_name, user_introduction)",
        "values (#{userCheckId,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR}, ",
        "#{sex,jdbcType=VARCHAR}, #{photoPath,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{hospitalId,jdbcType=BIGINT}, ",
        "#{hospitalName,jdbcType=VARCHAR}, #{sectionId,jdbcType=BIGINT}, ",
        "#{sectionName,jdbcType=VARCHAR}, #{userIntroduction,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     * @param record  Model for table user_info
     * @return   The last insert key for table user_info
     *
     * @mbggenerated
     */
    @InsertProvider(type=UserInfoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     * @param id  Primary key for table user_info
     * @return   Model for table user_info
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, user_check_id, real_name, sex, photo_path, phone, email, hospital_id, hospital_name, ",
        "section_id, section_name, user_introduction",
        "from user_info",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_check_id", property="userCheckId", jdbcType=JdbcType.BIGINT),
        @Result(column="real_name", property="realName", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
        @Result(column="photo_path", property="photoPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="hospital_id", property="hospitalId", jdbcType=JdbcType.BIGINT),
        @Result(column="hospital_name", property="hospitalName", jdbcType=JdbcType.VARCHAR),
        @Result(column="section_id", property="sectionId", jdbcType=JdbcType.BIGINT),
        @Result(column="section_name", property="sectionName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_introduction", property="userIntroduction", jdbcType=JdbcType.VARCHAR)
    })
    UserInfo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     * @param record  Model for table user_info
     * @return   The last insert key for table user_info
     *
     * @mbggenerated
     */
    @UpdateProvider(type=UserInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     * @param record  Model for table user_info
     * @return   The last insert key for table user_info
     *
     * @mbggenerated
     */
    @Update({
        "update user_info",
        "set user_check_id = #{userCheckId,jdbcType=BIGINT},",
          "real_name = #{realName,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "photo_path = #{photoPath,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "hospital_id = #{hospitalId,jdbcType=BIGINT},",
          "hospital_name = #{hospitalName,jdbcType=VARCHAR},",
          "section_id = #{sectionId,jdbcType=BIGINT},",
          "section_name = #{sectionName,jdbcType=VARCHAR},",
          "user_introduction = #{userIntroduction,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(UserInfo record);

    /**
     * 根据checkId查询
     * @param id
     * @return
     */
    @Select({
        "select",
        "id, user_check_id, real_name, sex, photo_path, phone, email, hospital_id, hospital_name, ",
        "section_id, section_name, user_introduction",
        "from user_info",
        "where user_check_id = #{checkId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_check_id", property="userCheckId", jdbcType=JdbcType.BIGINT),
        @Result(column="real_name", property="realName", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
        @Result(column="photo_path", property="photoPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="hospital_id", property="hospitalId", jdbcType=JdbcType.BIGINT),
        @Result(column="hospital_name", property="hospitalName", jdbcType=JdbcType.VARCHAR),
        @Result(column="section_id", property="sectionId", jdbcType=JdbcType.BIGINT),
        @Result(column="section_name", property="sectionName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_introduction", property="userIntroduction", jdbcType=JdbcType.VARCHAR)
    })
	UserInfo selectByCheckId(Long checkId);
}