package com.psc.pt.dao.pacs;

import com.psc.pt.model.pacs.CasePacs;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;
@Component("CasePacsMapper")
public interface CasePacsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_pacs
     * @param id  Primary key for table case_pacs
     * @return deleteByPrimaryKey
     *
     * @mbggenerated
     */
    @Delete({
        "delete from case_pacs",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_pacs
     * @param record  Model for table case_pacs
     * @return   The last insert key for table case_pacs
     *
     * @mbggenerated
     */
    @Insert({
        "insert into case_pacs (case_id, accno, ",
        "modality_id, OrgCode, ",
        "modality, item, ",
        "checkdate, read_url, ",
        "img_url, is_delete, temp1, ",
        "temp2, temp3, temp4)",
        "values (#{caseId,jdbcType=BIGINT}, #{accno,jdbcType=VARCHAR}, ",
        "#{modalityId,jdbcType=VARCHAR}, #{orgcode,jdbcType=VARCHAR}, ",
        "#{modality,jdbcType=VARCHAR}, #{item,jdbcType=VARCHAR}, ",
        "#{checkdate,jdbcType=TIMESTAMP}, #{readUrl,jdbcType=VARCHAR}, ",
        "#{imgUrl,jdbcType=VARCHAR}, #{isDelete,jdbcType=CHAR}, #{temp1,jdbcType=VARCHAR}, ",
        "#{temp2,jdbcType=VARCHAR}, #{temp3,jdbcType=VARCHAR}, #{temp4,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insert(CasePacs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_pacs
     * @param record  Model for table case_pacs
     * @return   The last insert key for table case_pacs
     *
     * @mbggenerated
     */
    @InsertProvider(type=CasePacsSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(CasePacs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_pacs
     * @param id  Primary key for table case_pacs
     * @return   Model for table case_pacs
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, case_id, accno, modality_id, OrgCode, modality, item, checkdate, read_url, ",
        "img_url, is_delete, temp1, temp2, temp3, temp4",
        "from case_pacs",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="case_id", property="caseId", jdbcType=JdbcType.BIGINT),
        @Result(column="accno", property="accno", jdbcType=JdbcType.VARCHAR),
        @Result(column="modality_id", property="modalityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OrgCode", property="orgcode", jdbcType=JdbcType.VARCHAR),
        @Result(column="modality", property="modality", jdbcType=JdbcType.VARCHAR),
        @Result(column="item", property="item", jdbcType=JdbcType.VARCHAR),
        @Result(column="checkdate", property="checkdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="read_url", property="readUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_url", property="imgUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.CHAR),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR)
    })
    CasePacs selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_pacs
     * @param record  Model for table case_pacs
     * @return   The last insert key for table case_pacs
     *
     * @mbggenerated
     */
    @UpdateProvider(type=CasePacsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CasePacs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_pacs
     * @param record  Model for table case_pacs
     * @return   The last insert key for table case_pacs
     *
     * @mbggenerated
     */
    @Update({
        "update case_pacs",
        "set case_id = #{caseId,jdbcType=BIGINT},",
          "accno = #{accno,jdbcType=VARCHAR},",
          "modality_id = #{modalityId,jdbcType=VARCHAR},",
          "OrgCode = #{orgcode,jdbcType=VARCHAR},",
          "modality = #{modality,jdbcType=VARCHAR},",
          "item = #{item,jdbcType=VARCHAR},",
          "checkdate = #{checkdate,jdbcType=TIMESTAMP},",
          "read_url = #{readUrl,jdbcType=VARCHAR},",
          "img_url = #{imgUrl,jdbcType=VARCHAR},",
          "is_delete = #{isDelete,jdbcType=CHAR},",
          "temp1 = #{temp1,jdbcType=VARCHAR},",
          "temp2 = #{temp2,jdbcType=VARCHAR},",
          "temp3 = #{temp3,jdbcType=VARCHAR},",
          "temp4 = #{temp4,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CasePacs record);

    /**
     * 根据caseId查询CasePacs信息
     * @param id
     * @return
     */
    @Select({
        "select",
        "id, case_id, accno, modality_id, OrgCode, modality, item, checkdate, read_url, ",
        "img_url, is_delete, temp1, temp2, temp3, temp4",
        "from case_pacs",
        "where case_id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="case_id", property="caseId", jdbcType=JdbcType.BIGINT),
        @Result(column="accno", property="accno", jdbcType=JdbcType.VARCHAR),
        @Result(column="modality_id", property="modalityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OrgCode", property="orgcode", jdbcType=JdbcType.VARCHAR),
        @Result(column="modality", property="modality", jdbcType=JdbcType.VARCHAR),
        @Result(column="item", property="item", jdbcType=JdbcType.VARCHAR),
        @Result(column="checkdate", property="checkdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="read_url", property="readUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_url", property="imgUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.CHAR),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR)
    })
	CasePacs selectCasePacsByCaseId(Long id);
}