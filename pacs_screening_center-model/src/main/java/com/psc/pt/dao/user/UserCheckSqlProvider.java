package com.psc.pt.dao.user;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.psc.pt.model.user.UserCheck;

public class UserCheckSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_check
     * @param record  Model for table user_check
     * @return   The combine SQL for table user_check
     *
     * @mbggenerated
     */
    public String insertSelective(UserCheck record) {
        BEGIN();
        INSERT_INTO("user_check");
        
        if (record.getUserName() != null) {
            VALUES("user_name", "#{userName,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            VALUES("password", "#{password,jdbcType=VARCHAR}");
        }
        
        if (record.getSalt() != null) {
            VALUES("salt", "#{salt,jdbcType=VARCHAR}");
        }
        
        if (record.getGroupId() != null) {
            VALUES("group_id", "#{groupId,jdbcType=BIGINT}");
        }
        
        if (record.getIsDelete() != null) {
            VALUES("is_delete", "#{isDelete,jdbcType=CHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_check
     * @param record  Model for table user_check
     * @return   The combine SQL for table user_check
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(UserCheck record) {
        BEGIN();
        UPDATE("user_check");
        
        if (record.getUserName() != null) {
            SET("user_name = #{userName,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            SET("password = #{password,jdbcType=VARCHAR}");
        }
        
        if (record.getSalt() != null) {
            SET("salt = #{salt,jdbcType=VARCHAR}");
        }
        
        if (record.getGroupId() != null) {
            SET("group_id = #{groupId,jdbcType=BIGINT}");
        }
        
        if (record.getIsDelete() != null) {
            SET("is_delete = #{isDelete,jdbcType=CHAR}");
        }
        
        WHERE("id = #{id,jdbcType=BIGINT}");
        
        return SQL();
    }
}