package com.psc.pt.dao.pacs;

import com.psc.pt.model.pacs.CaseDig;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;
@Component("CaseDigMapper")
public interface CaseDigMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_dig
     * @param id  Primary key for table case_dig
     * @return deleteByPrimaryKey
     *
     * @mbggenerated
     */
    @Delete({
        "delete from case_dig",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_dig
     * @param record  Model for table case_dig
     * @return   The last insert key for table case_dig
     *
     * @mbggenerated
     */
    @Insert({
        "insert into case_dig (case_id, dig_see, ",
        "dig_main, dig_doctor_id, ",
        "dig_doctor_name, dig_date, ",
        "temp1, temp2, temp3, ",
        "temp4)",
        "values (#{caseId,jdbcType=BIGINT}, #{digSee,jdbcType=VARCHAR}, ",
        "#{digMain,jdbcType=VARCHAR}, #{digDoctorId,jdbcType=BIGINT}, ",
        "#{digDoctorName,jdbcType=VARCHAR}, #{digDate,jdbcType=TIMESTAMP}, ",
        "#{temp1,jdbcType=VARCHAR}, #{temp2,jdbcType=VARCHAR}, #{temp3,jdbcType=VARCHAR}, ",
        "#{temp4,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insert(CaseDig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_dig
     * @param record  Model for table case_dig
     * @return   The last insert key for table case_dig
     *
     * @mbggenerated
     */
    @InsertProvider(type=CaseDigSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(CaseDig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_dig
     * @param id  Primary key for table case_dig
     * @return   Model for table case_dig
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, case_id, dig_see, dig_main, dig_doctor_id, dig_doctor_name, dig_date, temp1, ",
        "temp2, temp3, temp4",
        "from case_dig",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="case_id", property="caseId", jdbcType=JdbcType.BIGINT),
        @Result(column="dig_see", property="digSee", jdbcType=JdbcType.VARCHAR),
        @Result(column="dig_main", property="digMain", jdbcType=JdbcType.VARCHAR),
        @Result(column="dig_doctor_id", property="digDoctorId", jdbcType=JdbcType.BIGINT),
        @Result(column="dig_doctor_name", property="digDoctorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="dig_date", property="digDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR)
    })
    CaseDig selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_dig
     * @param record  Model for table case_dig
     * @return   The last insert key for table case_dig
     *
     * @mbggenerated
     */
    @UpdateProvider(type=CaseDigSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CaseDig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_dig
     * @param record  Model for table case_dig
     * @return   The last insert key for table case_dig
     *
     * @mbggenerated
     */
    @Update({
        "update case_dig",
        "set case_id = #{caseId,jdbcType=BIGINT},",
          "dig_see = #{digSee,jdbcType=VARCHAR},",
          "dig_main = #{digMain,jdbcType=VARCHAR},",
          "dig_doctor_id = #{digDoctorId,jdbcType=BIGINT},",
          "dig_doctor_name = #{digDoctorName,jdbcType=VARCHAR},",
          "dig_date = #{digDate,jdbcType=TIMESTAMP},",
          "temp1 = #{temp1,jdbcType=VARCHAR},",
          "temp2 = #{temp2,jdbcType=VARCHAR},",
          "temp3 = #{temp3,jdbcType=VARCHAR},",
          "temp4 = #{temp4,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CaseDig record);

    /**
     * 获取诊断
     * @param parseLong
     * @return
     */
    @Select({
        "select TOP 1",
        "id, case_id, dig_see, dig_main, dig_doctor_id, dig_doctor_name, dig_date, temp1, ",
        "temp2, temp3, temp4",
        "from case_dig",
        "where case_id = #{parseLong,jdbcType=BIGINT} ORDER BY dig_date DESC"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="case_id", property="caseId", jdbcType=JdbcType.BIGINT),
        @Result(column="dig_see", property="digSee", jdbcType=JdbcType.VARCHAR),
        @Result(column="dig_main", property="digMain", jdbcType=JdbcType.VARCHAR),
        @Result(column="dig_doctor_id", property="digDoctorId", jdbcType=JdbcType.BIGINT),
        @Result(column="dig_doctor_name", property="digDoctorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="dig_date", property="digDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR)
    })
	CaseDig selectCaseDigByCaseId(long parseLong);
}