package com.psc.pt.dao.pacs;

import java.util.List;
import java.util.Map;

import com.psc.pt.model.pacs.DigPacs;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;
@Component("DigPaseMapper")
public interface DigPacsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dig_pacs
     * @param id  Primary key for table dig_pacs
     * @return deleteByPrimaryKey
     *
     * @mbggenerated
     */
    @Delete({
        "delete from dig_pacs",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dig_pacs
     * @param record  Model for table dig_pacs
     * @return   The last insert key for table dig_pacs
     *
     * @mbggenerated
     */
    @Insert({
        "insert into dig_pacs (is_delete, type, ",
        "name, p_id, temp1, ",
        "temp2, temp3, temp4, ",
        "temp5, temp6)",
        "values (#{isDelete,jdbcType=CHAR}, #{type,jdbcType=VARCHAR}, ",
        "#{name,jdbcType=VARCHAR}, #{pId,jdbcType=BIGINT}, #{temp1,jdbcType=VARCHAR}, ",
        "#{temp2,jdbcType=VARCHAR}, #{temp3,jdbcType=VARCHAR}, #{temp4,jdbcType=VARCHAR}, ",
        "#{temp5,jdbcType=VARCHAR}, #{temp6,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insert(DigPacs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dig_pacs
     * @param record  Model for table dig_pacs
     * @return   The last insert key for table dig_pacs
     *
     * @mbggenerated
     */
    @InsertProvider(type=DigPacsSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(DigPacs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dig_pacs
     * @param id  Primary key for table dig_pacs
     * @return   Model for table dig_pacs
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, is_delete, type, name, p_id, temp1, temp2, temp3, temp4, temp5, temp6",
        "from dig_pacs",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.CHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="p_id", property="pId", jdbcType=JdbcType.BIGINT),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp5", property="temp5", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp6", property="temp6", jdbcType=JdbcType.VARCHAR)
    })
    DigPacs selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dig_pacs
     * @param record  Model for table dig_pacs
     * @return   The last insert key for table dig_pacs
     *
     * @mbggenerated
     */
    @UpdateProvider(type=DigPacsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DigPacs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dig_pacs
     * @param record  Model for table dig_pacs
     * @return   The last insert key for table dig_pacs
     *
     * @mbggenerated
     */
    @Update({
        "update dig_pacs",
        "set is_delete = #{isDelete,jdbcType=CHAR},",
          "type = #{type,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=VARCHAR},",
          "p_id = #{pId,jdbcType=BIGINT},",
          "temp1 = #{temp1,jdbcType=VARCHAR},",
          "temp2 = #{temp2,jdbcType=VARCHAR},",
          "temp3 = #{temp3,jdbcType=VARCHAR},",
          "temp4 = #{temp4,jdbcType=VARCHAR},",
          "temp5 = #{temp5,jdbcType=VARCHAR},",
          "temp6 = #{temp6,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(DigPacs record);

	    /**
     * 获取节点
     * @param paramsMap
     * @return
     */
    @Select({
        "select",
        "id, is_delete, type, name, p_id, temp1, temp2, temp3, temp4, temp5, temp6",
        "from dig_pacs",
        "where p_id = #{pId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.CHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="p_id", property="pId", jdbcType=JdbcType.BIGINT),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp5", property="temp5", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp6", property="temp6", jdbcType=JdbcType.VARCHAR)
    })
	List<DigPacs> getDigPacs(Map<String, Object> paramsMap);

}