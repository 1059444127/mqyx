package com.psc.pt.dao.pacs;

import java.util.List;
import java.util.Map;

import com.psc.pt.model.pacs.CaseListInfo;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CaseListInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_list_info
     * @param id  Primary key for table case_list_info
     * @return deleteByPrimaryKey
     *
     * @mbggenerated
     */
    @Delete({
        "delete from case_list_info",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_list_info
     * @param record  Model for table case_list_info
     * @return   The last insert key for table case_list_info
     *
     * @mbggenerated
     */
    @Insert({
        "insert into case_list_info (status, patient_name, ",
        "patient_sex, patient_age, ",
        "visit_type, patient_phone, ",
        "patient_no, check_no, ",
        "case_no, item, modality, ",
        "doctor_id, send_doctor_id, ",
        "send_doctor_name, send_hospital_id, ",
        "send_hospital_name, send_date, ",
        "get_date, dig_date, ",
        "back_date, missing_time, ",
        "inId, is_delete, is_appoint, ",
        "temp1, temp2, temp3, ",
        "temp4, temp5)",
        "values (#{status,jdbcType=VARCHAR}, #{patientName,jdbcType=VARCHAR}, ",
        "#{patientSex,jdbcType=VARCHAR}, #{patientAge,jdbcType=INTEGER}, ",
        "#{visitType,jdbcType=VARCHAR}, #{patientPhone,jdbcType=VARCHAR}, ",
        "#{patientNo,jdbcType=VARCHAR}, #{checkNo,jdbcType=VARCHAR}, ",
        "#{caseNo,jdbcType=VARCHAR}, #{item,jdbcType=VARCHAR}, #{modality,jdbcType=VARCHAR}, ",
        "#{doctorId,jdbcType=BIGINT}, #{sendDoctorId,jdbcType=BIGINT}, ",
        "#{sendDoctorName,jdbcType=VARCHAR}, #{sendHospitalId,jdbcType=BIGINT}, ",
        "#{sendHospitalName,jdbcType=VARCHAR}, #{sendDate,jdbcType=TIMESTAMP}, ",
        "#{getDate,jdbcType=TIMESTAMP}, #{digDate,jdbcType=TIMESTAMP}, ",
        "#{backDate,jdbcType=TIMESTAMP}, #{missingTime,jdbcType=BIGINT}, ",
        "#{inid,jdbcType=BIGINT}, #{isDelete,jdbcType=CHAR}, #{isAppoint,jdbcType=CHAR}, ",
        "#{temp1,jdbcType=VARCHAR}, #{temp2,jdbcType=VARCHAR}, #{temp3,jdbcType=VARCHAR}, ",
        "#{temp4,jdbcType=VARCHAR}, #{temp5,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT SCOPE_IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insert(CaseListInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_list_info
     * @param record  Model for table case_list_info
     * @return   The last insert key for table case_list_info
     *
     * @mbggenerated
     */
    @InsertProvider(type=CaseListInfoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT @@IDENTITY", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(CaseListInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_list_info
     * @param id  Primary key for table case_list_info
     * @return   Model for table case_list_info
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, status, patient_name, patient_sex, patient_age, visit_type, patient_phone, ",
        "patient_no, check_no, case_no, item, modality, doctor_id, send_doctor_id, send_doctor_name, ",
        "send_hospital_id, send_hospital_name, send_date, get_date, dig_date, back_date, ",
        "missing_time, inId, is_delete, is_appoint, temp1, temp2, temp3, temp4, temp5",
        "from case_list_info",
        "where id = #{id,jdbcType=BIGINT} AND is_delete != 0"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_name", property="patientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_sex", property="patientSex", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_age", property="patientAge", jdbcType=JdbcType.INTEGER),
        @Result(column="visit_type", property="visitType", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_phone", property="patientPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_no", property="patientNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="check_no", property="checkNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="case_no", property="caseNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="item", property="item", jdbcType=JdbcType.VARCHAR),
        @Result(column="modality", property="modality", jdbcType=JdbcType.VARCHAR),
        @Result(column="doctor_id", property="doctorId", jdbcType=JdbcType.BIGINT),
        @Result(column="send_doctor_id", property="sendDoctorId", jdbcType=JdbcType.BIGINT),
        @Result(column="send_doctor_name", property="sendDoctorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_hospital_id", property="sendHospitalId", jdbcType=JdbcType.BIGINT),
        @Result(column="send_hospital_name", property="sendHospitalName", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_date", property="sendDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="get_date", property="getDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dig_date", property="digDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="back_date", property="backDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="missing_time", property="missingTime", jdbcType=JdbcType.BIGINT),
        @Result(column="inId", property="inid", jdbcType=JdbcType.BIGINT),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.CHAR),
        @Result(column="is_appoint", property="isAppoint", jdbcType=JdbcType.CHAR),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp5", property="temp5", jdbcType=JdbcType.VARCHAR)
    })
    CaseListInfo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_list_info
     * @param record  Model for table case_list_info
     * @return   The last insert key for table case_list_info
     *
     * @mbggenerated
     */
    @UpdateProvider(type=CaseListInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CaseListInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_list_info
     * @param record  Model for table case_list_info
     * @return   The last insert key for table case_list_info
     *
     * @mbggenerated
     */
    @Update({
        "update case_list_info",
        "set status = #{status,jdbcType=VARCHAR},",
          "patient_name = #{patientName,jdbcType=VARCHAR},",
          "patient_sex = #{patientSex,jdbcType=VARCHAR},",
          "patient_age = #{patientAge,jdbcType=INTEGER},",
          "visit_type = #{visitType,jdbcType=VARCHAR},",
          "patient_phone = #{patientPhone,jdbcType=VARCHAR},",
          "patient_no = #{patientNo,jdbcType=VARCHAR},",
          "check_no = #{checkNo,jdbcType=VARCHAR},",
          "case_no = #{caseNo,jdbcType=VARCHAR},",
          "item = #{item,jdbcType=VARCHAR},",
          "modality = #{modality,jdbcType=VARCHAR},",
          "doctor_id = #{doctorId,jdbcType=BIGINT},",
          "send_doctor_id = #{sendDoctorId,jdbcType=BIGINT},",
          "send_doctor_name = #{sendDoctorName,jdbcType=VARCHAR},",
          "send_hospital_id = #{sendHospitalId,jdbcType=BIGINT},",
          "send_hospital_name = #{sendHospitalName,jdbcType=VARCHAR},",
          "send_date = #{sendDate,jdbcType=TIMESTAMP},",
          "get_date = #{getDate,jdbcType=TIMESTAMP},",
          "dig_date = #{digDate,jdbcType=TIMESTAMP},",
          "back_date = #{backDate,jdbcType=TIMESTAMP},",
          "missing_time = #{missingTime,jdbcType=BIGINT},",
          "inId = #{inid,jdbcType=BIGINT},",
          "is_delete = #{isDelete,jdbcType=CHAR},",
          "is_appoint = #{isAppoint,jdbcType=CHAR},",
          "temp1 = #{temp1,jdbcType=VARCHAR},",
          "temp2 = #{temp2,jdbcType=VARCHAR},",
          "temp3 = #{temp3,jdbcType=VARCHAR},",
          "temp4 = #{temp4,jdbcType=VARCHAR},",
          "temp5 = #{temp5,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CaseListInfo record);

    /**
     * 列表总数
     * @param paramsMap
     * @return
     */
    @SelectProvider(type=CaseListInfoSqlProvider.class, method="selectListCount")
	Long selectListCount(Map<String, Object> paramsMap);

    /**
     * 取列表
     * @param paramsMap
     * @return
     */
    @SelectProvider(type=CaseListInfoSqlProvider.class, method="selectList")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_name", property="patientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_sex", property="patientSex", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_age", property="patientAge", jdbcType=JdbcType.INTEGER),
        @Result(column="visit_type", property="visitType", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_phone", property="patientPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="patient_no", property="patientNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="check_no", property="checkNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="case_no", property="caseNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="item", property="item", jdbcType=JdbcType.VARCHAR),
        @Result(column="modality", property="modality", jdbcType=JdbcType.VARCHAR),
        @Result(column="doctor_id", property="doctorId", jdbcType=JdbcType.BIGINT),
        @Result(column="send_doctor_id", property="sendDoctorId", jdbcType=JdbcType.BIGINT),
        @Result(column="send_doctor_name", property="sendDoctorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_hospital_id", property="sendHospitalId", jdbcType=JdbcType.BIGINT),
        @Result(column="send_hospital_name", property="sendHospitalName", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_date", property="sendDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="get_date", property="getDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dig_date", property="digDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="back_date", property="backDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="missing_time", property="missingTime", jdbcType=JdbcType.BIGINT),
        @Result(column="inId", property="inid", jdbcType=JdbcType.BIGINT),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.CHAR),
        @Result(column="is_appoint", property="isAppoint", jdbcType=JdbcType.CHAR),
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp5", property="temp5", jdbcType=JdbcType.VARCHAR)
    })
	List<CaseListInfo> selectList(Map<String, Object> paramsMap);

    /**
     * 获取统计信息
     * @param paramsMap
     * @return
     */
    @SelectProvider(type=CaseListInfoSqlProvider.class, method="selectAllCount")
    @Results({
        @Result(column="temp1", property="temp1", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp2", property="temp2", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp3", property="temp3", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp4", property="temp4", jdbcType=JdbcType.VARCHAR),
        @Result(column="temp5", property="temp5", jdbcType=JdbcType.VARCHAR)
    })
	CaseListInfo selectAllCount(Map<String, Object> paramsMap);
}